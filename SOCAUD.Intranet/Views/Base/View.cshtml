@using SOCAUD.Common.Enum;
@model SOCAUD.Intranet.Models.BaseModel
@{
    ViewBag.PageTitle = "Base";
    ViewBag.PageDescription = "Información de Base";
}

@Html.HiddenFor(c => c.Codigo)
<div class="box box-primary color-palette-box">
    <div class="box-header with-border">
        <h3 class="box-title">Base</h3>
    </div>
    <div class="box-body">
        <form id="frmBases">
            @Html.HiddenFor(c => c.Codigo)
            <div class="form-group">
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.LabelFor(c => c.Numero)
                            @Html.TextBoxFor(c => c.Numero, new { @class = "form-control", @readonly = "true" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(c => c.FechaMaxPublicacion)
                            <div class="input-group date">
                                @Html.TextBoxFor(c => c.FechaMaxPublicacion, new { @class = "form-control", @readonly = "true" })
                                <span class="input-group-addon">
                                    <i class="fa fa-calendar bigger-110"></i>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.LabelFor(c => c.Cronograma)
                            @Html.DropDownListFor(c => c.Cronograma, Model.Cronogramas, "(Seleccionar Cronograma)", new { @class = "form-control", @disabled = "disabled" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(c => c.CronoEntidad)
                            @Html.DropDownListFor(c => c.CronoEntidad, Model.Entidades, "(Seleccionar Entidad)", new { @class = "form-control", @disabled = "disabled" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(c => c.TotalRetribucion)
                            @Html.TextBoxFor(c => c.TotalRetribucion, new { @class = "form-control", @readonly = "true" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(c => c.TotalViaticos)
                            @Html.TextBoxFor(c => c.TotalViaticos, new { @class = "form-control", @readonly = "true" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(c => c.FirmaPcaob)
                            <div class="btn-group" data-toggle="buttons">
                                <label class="btn btn-primary @Html.Raw(Model.FirmaPcaob == "S" ? "" : "hidden")">
                                    <input type="radio" name="FirmaPcaob" id="FirmaPcaob1" value="S" autocomplete="off" @Html.Raw(Model.FirmaPcaob == "S" ? "checked" : "")> SI
                                </label>
                                <label class="btn btn-danger @Html.Raw(Model.FirmaPcaob == "N" ? "" : "hidden")">
                                    <input type="radio" name="FirmaPcaob" id="FirmaPcaob2" value="N" autocomplete="off" @Html.Raw(Model.FirmaPcaob == "N" ? "checked" : "")> NO
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(c => c.FirmaInternacional)
                            <div class="btn-group" data-toggle="buttons">
                                <label class="btn btn-primary @Html.Raw(Model.FirmaInternacional == "S" ? "" : "hidden")">
                                    <input type="radio" name="FirmaInternacional" id="FirmaInternacional1" value="S" autocomplete="off" @Html.Raw(Model.FirmaInternacional == "S" ? "checked" : "")> SI
                                </label>
                                <label class="btn btn-danger @Html.Raw(Model.FirmaInternacional == "N" ? "" : "hidden")">
                                    <input type="radio" name="FirmaInternacional" id="FirmaInternacional2" value="N" autocomplete="off" @Html.Raw(Model.FirmaInternacional == "N" ? "checked" : "")> NO
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <button type="button" id="btnRegresar" class="btn btn-default" onclick="regresar();"><i class="fa fa-fw fa-reply"></i>Regresar</button>
                        </div>
                    </div>
                </div>
            </div>
        </form>

    </div>
</div>

<div class="box box-primary color-palette-box">
    <div class="box-header with-border">
        <h3 class="box-title">Flujo de Aprobación</h3>
    </div>
    <div class="box-body">
        <div class="row">
            <div class="form-group">
                <div class="col-md-6">
                    @Html.LabelFor(c => c.EstadoBaseDescripcion) : @Html.Raw(Model.EstadoBaseDescripcion)
                </div>
            </div>
        </div>
        <table id="tabFlujo" class="table table-striped table-bordered" cellpadding="0" cellspacing="0" border="0"></table>
    </div>
</div>


@section scripts {

    <script type="text/javascript" language="javascript">

        var tabFlujo;
        var _dataFlujo_ = null;

        $(document).ready(function () {
            listarFlujos();
        });

        function listarFlujos() {

            if (tabFlujo == undefined) {
                tabFlujo = $("#tabFlujo").dataTable({
                    "info": false,
                    "bServerSide": false,
                    "data": _dataFlujo_,
                    //"order": [[1, "asc"]],
                    "columns": [
                        { "sTitle": "Flujo" },
                        { "sTitle": "Nota" },
                        { "sTitle": "Fecha" }
                    ]

                });
            }

            $.ajax({
                url: '@Url.Action("ListarWorkflowDocumento", "Workflow", new { Area = "" })',
                type: 'POST',
                async: false,
                data: { idDocumento: $("#Codigo").val() },
                success: function (result) {
                    _dataFlujo_ = result;
                    tabFlujo.fnReloadData(_dataFlujo_);
                }
            });
        }

        function regresar() {
            document.location = '@Url.Action("Index", "Base")';
        }
</script>
}
