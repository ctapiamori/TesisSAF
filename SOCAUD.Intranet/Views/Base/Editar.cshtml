@using System;
@using SOCAUD.Common.Enum;
@model SOCAUD.Intranet.Models.BaseModel
@{
    ViewBag.PageTitle = "Base";
    ViewBag.PageDescription = "Información de Base";
    //Layout = "~/Views/Shared/_Layout.cshtml";
}

@Html.HiddenFor(c => c.Codigo)
<div class="box box-primary color-palette-box">
    <div class="box-header with-border">
        <h3 class="box-title">Base</h3>
    </div>
    <div class="box-body">
        <form id="frmBases">
            @Html.HiddenFor(c => c.Codigo)
            <div class="form-group">


                <div class="row">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.LabelFor(c => c.Cronograma)
                            @Html.DropDownListFor(c => c.Cronograma, Model.Cronogramas, "Seleccionar", new { @class = "form-control", @readonly = "true" })
                            @Html.ValidationMessageFor(c => c.Cronograma)
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.LabelFor(c => c.CronoEntidad)
                            @Html.DropDownListFor(c => c.CronoEntidad, Model.Entidades, "Seleccionar", new { @class = "form-control", @readonly = "true" })
                            @Html.ValidationMessageFor(c => c.CronoEntidad)
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.LabelFor(c => c.FecIniAuditoriaCronograma)
                            @Html.TextBoxFor(c => c.FecIniAuditoriaCronograma, new { @class = "form-control", @readonly = "true" })
                        </div>
                    
                        <div class="col-md-6">
                            @Html.LabelFor(c => c.FecFinAuditoriaCronograma)
                            @Html.TextBoxFor(c => c.FecFinAuditoriaCronograma, new { @class = "form-control", @readonly = "true" })
                        </div>
                    </div>
                </div>


                <div class="row">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.LabelFor(c => c.Numero)
                            @Html.TextBoxFor(c => c.Numero, new { @class = "form-control", @readonly = "true" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(c => c.FechaMaxPublicacion)
                            <div class="input-group date">
                                @Html.TextBoxFor(c => c.FechaMaxPublicacion, new { @class = "form-control" })
                                <span class="input-group-addon">
                                    <i class="fa fa-calendar bigger-110"></i>
                                </span>
                            </div>
                            @Html.ValidationMessageFor(c => c.FechaMaxPublicacion)
                        </div>
                    </div>
                 </div>
                 <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(c => c.TotalRetribucion)
                            @Html.TextBoxFor(c => c.TotalRetribucion, new { @class = "form-control" })
                            @Html.ValidationMessageFor(c => c.TotalRetribucion)
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(c => c.TotalViaticos)
                            @Html.TextBoxFor(c => c.TotalViaticos, new { @class = "form-control" })
                            @Html.ValidationMessageFor(c => c.TotalViaticos)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(c => c.TotalIgv)
                            @Html.TextBoxFor(c => c.TotalIgv, new { @class = "form-control" })
                            @Html.ValidationMessageFor(c => c.TotalIgv)
                        </div>
                    </div>
 
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(c => c.FirmaPcaob)
                            <div class="btn-group" data-toggle="buttons">
                                <label class="btn btn-default @Html.Raw(Model.FirmaPcaob == "S" ? "active" : "")">
                                    <input type="radio" name="FirmaPcaob" id="FirmaPcaob1" value="S" autocomplete="off" @Html.Raw(Model.FirmaPcaob == "S" ? "checked" : "")> SI
                                </label>
                                <label class="btn btn-default @Html.Raw(Model.FirmaPcaob == "N" ? "active" : "")">
                                    <input type="radio" name="FirmaPcaob" id="FirmaPcaob2" value="N" autocomplete="off" @Html.Raw(Model.FirmaPcaob == "N" ? "checked" : "")> NO
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(c => c.FirmaInternacional)
                            <div class="btn-group" data-toggle="buttons">
                                <label class="btn btn-default @Html.Raw(Model.FirmaInternacional == "S" ? "active" : "")">
                                    <input type="radio" name="FirmaInternacional" id="FirmaInternacional1" value="S" autocomplete="off" @Html.Raw(Model.FirmaInternacional == "S" ? "checked" : "")> SI
                                </label>
                                <label class="btn btn-default @Html.Raw(Model.FirmaInternacional == "N" ? "active" : "")">
                                    <input type="radio" name="FirmaInternacional" id="FirmaInternacional2" value="N" autocomplete="off" @Html.Raw(Model.FirmaInternacional == "N" ? "checked" : "")> NO
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <button type="button" id="btnGrabar" class="btn btn-primary" onclick="grabarCronograma();"><i class="fa fa-fw fa-save"></i>Grabar Información de la Base</button>
                            <button type="button" id="btnRegresar" onclick="regresar();" class="btn btn-default"><i class="fa fa-chevron-left"></i>&nbsp;Regresar</button>
                        </div>
                    </div>
                </div>
            </div>
        </form>

    </div>
</div>

<div class="box box-primary color-palette-box">
    <div class="box-header with-border">
        <h3 class="box-title">Servicio de Auditoria</h3>
    </div>
    <div class="box-body">
        <div class="row">
            <div class="form-group">
                <div class="col-md-6">
                    @Html.LabelFor(c => c.EstadoBaseDescripcion) : @Html.Raw(Model.EstadoBaseDescripcion)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                <div class="col-md-12">
                    <table id="tabServicios" class="table table-striped table-bordered" cellpadding="0" cellspacing="0" border="0"></table>
                </div>   
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                <div class="col-md-12">
                    <button type="button" id="btnAuditoria" class="btn btn-primary" onclick="agregarServicio();"><i class="fa fa-fw fa-plus"></i>Agregar Auditoria</button>
                </div>
            </div>
        </div>
        
    </div>
</div>


<div class="box box-primary color-palette-box">
    <div class="box-header with-border">
        <h3 class="box-title">Flujo de Aprobación</h3>
    </div>
    <div class="box-body">
        <div class="row">
            <div class="form-group">
                <div class="col-md-6">
                    @Html.LabelFor(c => c.EstadoBaseDescripcion) : @Html.Raw(Model.EstadoBaseDescripcion)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                <div class="col-md-12">
                    <table id="tabFlujo" class="table table-striped table-bordered" cellpadding="0" cellspacing="0" border="0"></table>            
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                <div class="col-md-12">
                    <button type="button" id="btnSolicitar" class="btn btn-primary" onclick="solicitarAprobacion();"><i class="fa fa-fw fa-share"></i>Enviar WorkFlow Aprobación</button>
                    <button type="button" id="btnRegresar2" onclick="regresar();" class="btn btn-default"><i class="fa fa-chevron-left"></i>&nbsp;Regresar</button>
                </div>
            </div>
        </div>
        
    </div>
</div>

<div class="modal fade" id="modalWorkflow" tabindex="-1" role="dialog" aria-hidden="true"></div>

@section scripts {

    <script type="text/javascript" language="javascript">
        $(document).ready(function () {

            $('#FechaMaxPublicacion').datepicker({
                format: "dd/mm/yyyy",
                startDate: '@DateTime.Now.ToString("dd/MM/yyyy")'
            }).next().on(ace.click_event, function () {
                $(this).prev().focus();
            });

            $("#Cronograma").on("change", function () {
                var cronograma = $(this).val();
                Entidades(cronograma);
            });

            $("#TotalRetribucion").keyup(function () {
                var totalRetribucion = $("#TotalRetribucion").val();
                totalRetribucion = parseFloat(totalRetribucion);
                var igvTotal = totalRetribucion * 0.18
                $("#TotalIgv").val(igvTotal);
            });

            listarFlujos();
            listarServiciosAuditoria();
        });

        var tabFlujo;
        var tabServicioAuditoria;
        var _dataFlujo_ = null;
        var _dataServicioAuditoria_ = null;
        function listarFlujos() {

            if (tabFlujo == undefined) {
                tabFlujo = $("#tabFlujo").dataTable({
                    "info": false,
                    "bServerSide": false,
                    "data": _dataFlujo_,
                    //"order": [[1, "asc"]],
                    "columns": [
                        { "sTitle": "Flujo" },
                        { "sTitle": "Nota" },
                        { "sTitle": "Usuario" },
                        { "sTitle": "Estado" },
                        { "sTitle": "Fecha" }
                    ]

                });
            }

            $.ajax({
                url: '@Url.Action("ListarWorkflowDocumento", "Workflow", new { Area = "" })',
                type: 'POST',
                async: false,
                data: { idDocumento: $("#Codigo").val(), tipoDocumento: "B" },
                success: function (result) {
                    _dataFlujo_ = result;
                    tabFlujo.fnReloadData(_dataFlujo_);
                }
            });
        }


        function listarServiciosAuditoria() {

            if (tabServicioAuditoria == undefined) {
                tabServicioAuditoria = $("#tabServicios").dataTable({
                    "info": false,
                    "bServerSide": false,
                    "data": _dataServicioAuditoria_,
                    //"order": [[1, "asc"]],
                    "columns": [
                        {
                            "bSortable": false,
                            "sClass": "center",
                            "sWidth": "5%",
                            "render": function (data, type, row) {
                                return '<center><button class="btn btn-success" title="Editar" type="button" onclick="editarServicio(' + row[0] + ');"><i class="fa fa-pencil"></i></button></center>';
                            }
                        },
                        { "sTitle": "Periodo" },
                        { "sTitle": "Fecha Inicio" },
                        { "sTitle": "Fecha Fin" },
                        { "sTitle": "Retribucion Eco." },
                        { "sTitle": "Viaticos" }
                    ]

                });
            }

            $.ajax({
                url: '@Url.Action("ListarServicios", "Base", new { Area = "" })',
                type: 'POST',
                async: false,
                data: { idBase: $("#Codigo").val() },
                success: function (result) {
                    _dataServicioAuditoria_ = result;
                    tabServicioAuditoria.fnReloadData(_dataServicioAuditoria_);
                }
            });
        }

        function agregarServicio() {
            document.location = '@Url.Action("ServicioAuditoria", "Base", new { idBase = Model.Codigo, servicio = 0 })';
        }

        function editarServicio(idServicio) {
            document.location = '@Url.Action("ServicioAuditoria", "Base", new { idBase = Model.Codigo, servicio = "_idSer_" })'.replace("_idSer_", idServicio);
        }

        function solicitarAprobacion() {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Solicitud", "Workflow")',
                data: { idDocumento: $("#Codigo").val(), tipoDocumento: "B" },
                success: function (result) {
                    $("#modalWorkflow").empty().html(result).modal();
                }
            });
        }

        function Entidades(cronograma) {
            $("#CronoEntidad option").not(":first").remove();
            $.ajax({
                type: "POST",
                url: '@Url.Action("ListarEntidadCronograma", "Base")',
                data: { "cronograma": cronograma },
                dataType: "json",
                success: function (result) {
                    $.each(result, function (key, value) {
                        $("#CronoEntidad").append("<option value='" + value.Value + "'>" + value.Text + "</option>")
                    });
                }
            });
        }


        function grabarCronograma() {

            if (parseFloat($("#TotalRetribucion").val()) <= 0) {
                new PNotify({
                    title: 'Respuesta Sistema!',
                    type: "error",
                    text: "La retribución economica debe ser mayor a 0 (cero)"
                });
                return;
            }

            if (parseFloat($("#TotalViaticos").val()) < 0) {
                new PNotify({
                    title: 'Respuesta Sistema!',
                    type: "error",
                    text: "El viatico debe ser mayor o igual a 0 (cero)"
                });
                return;
            }

            if (!$("#frmBases").isValid()) { return; }

            bootbox.confirm(parametros.general.mensajeConfirmacion, function (result) {

                if (result) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("SaveBase", "Base")',
                        data: $("#frmBases").serialize(),
                        dataType: "json",
                        success: function (result) {

                            mostrarNotificacion(result);
                            if (result.Exito) {
                                //$("#Numero").val(result.Data.NUMBAS)
                                //$("#btnGrabar").prop("disabled", true);
                            }
                        }
                    });
                }
            });
        }

        function regresar() {
            document.location = '@Url.Action("Index", "Base")';
        }
    </script>
}
