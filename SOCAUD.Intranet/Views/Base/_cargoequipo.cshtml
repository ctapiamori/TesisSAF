@model SOCAUD.Intranet.Models.CargoEquipoServicioAuditoriaModel

<div class="box box-primary color-palette-box">
    <div class="box-header with-border">
        <h3 class="box-title">Entidades</h3>
    </div>
    <div class="panel-body">
        <div class="row">
            <div class="col-md-6">
                <table id="tabEntidades" class="table table-striped table-bordered" cellpadding="0" cellspacing="0" border="0"></table>
            </div>
            <div class="col-md-6">
                <form id="frmEntidad">
                    @Html.HiddenFor(c => c.IdServicioAuditoria)
                    @Html.HiddenFor(c => c.IdCargoServicioAuditoria)
                    @Html.HiddenFor(c => c.IdExperienciaServicioAuditoria)
                    @Html.HiddenFor(c => c.IdCapacitacionServicioAuditoria)
                    <div class="form-group">
                        @Html.LabelFor(c => c.IdCargoSeleted)
                        @Html.DropDownListFor(c => c.IdCargoSeleted, Model.CargosServicioAuditoria, "(Seleccionar Cargo)", new { @class = "form-control" })
                        @Html.ValidationMessageFor(c => c.IdCargoSeleted)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(c => c.CantidadIntegrantes)
                        @Html.TextBoxFor(c => c.CantidadIntegrantes, new { @class = "form-control" })
                        @Html.ValidationMessageFor(c => c.CantidadIntegrantes)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(c => c.MinimoHoras)
                        @Html.TextBoxFor(c => c.MinimoHoras, new { @class = "form-control" })
                        @Html.ValidationMessageFor(c => c.MinimoHoras)
                    </div>
                    <div class="form-group">
                        <h2>Capacitación por Cargo</h2>
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(c => c.IdCapacitacionServicioAuditoria)
                        @Html.LabelFor(c => c.MinimoHorasCapacitacion)
                        @Html.TextBoxFor(c => c.MinimoHorasCapacitacion, new { @class = "form-control" })
                        @Html.ValidationMessageFor(c => c.MinimoHorasCapacitacion)
                    </div>
                    <div class="form-group">
                        <h2>Experiencia por Cargo</h2>
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(c => c.IdExperienciaServicioAuditoria)
                        @Html.LabelFor(c => c.MinimoHorasExperiencia)
                        @Html.TextBoxFor(c => c.MinimoHorasExperiencia, new { @class = "form-control" })
                        @Html.ValidationMessageFor(c => c.MinimoHorasExperiencia)
                    </div>
                    <div class="form-group">
                        <button type="button" class="btn btn-success" onclick="grabarCargoEquipo();"><i class="fa fa-fw fa-save"></i>Grabar</button>
                        <button type="button" class="btn btn-default" onclick="clearCargoEquipo();">Cancelar</button>
                    </div>
                </form>
            </div>
        </div>

    </div>

</div>

<script type="text/javascript">
    console.log("aqui")
    var _dataEntidades_ = null;
    var tabEntidades;

        $(document).ready(function () {


        });

        function listarEntidades() {
            $.ajax({
                url: '@Url.Action("ListarEntidadCronograma", "Cronograma")',
                type: 'POST',
                async: false,
                data: { cronograma: $("#Cronograma").val() },
                success: function (result) {
                    _dataEntidades_ = result;
                    tabEntidades.fnReloadData(_dataEntidades_);
                }
            });
        }

    function clearCargoEquipo()
    {
        $("#frmEntidad #Codigo").val("0");
        $("#frmEntidad #Entidad").val("");
        $("#frmEntidad #FechaInicio").val("");
        $("#frmEntidad #FechaTermino").val("");
    }

        function EditarEntidad(id)
        {
            var entidad;
            $.each(_dataEntidades_, function (key, row) {
                if (row[0] == id) {
                    return entidad = row;
                }
            });
            clearEntidad();
            if(entidad != undefined)
            {
                $("#frmEntidad #Codigo").val(entidad[0]);
                $("#frmEntidad #Entidad").val(entidad[5]);
                $("#frmEntidad #FechaInicio").val(entidad[2]);
                $("#frmEntidad #FechaTermino").val(entidad[3]);
            }
        }

        function EliminarEntidad(id)
        {
            $.ajax({
                url: '@Url.Action("EliminarEntidad", "Cronograma")/' + id,
                type: 'POST',
                async: false,
                success: function (result) {
                    mostrarNotificacion(result);
                    listarEntidades();
                }
            });
        }

    function grabarCargoEquipo() {
            if (!$("#frmEntidad").isValid()) { return; }

            bootbox.confirm(parametros.general.mensajeConfirmacion, function (result) {

                if (result) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("SaveCronoEntidad", "Cronograma")',
                        data: $("#frmEntidad").serialize(),
                        dataType: "json",
                        success: function (result) {
                            mostrarNotificacion(result);
                            if (result.Exito) {
                                clearEntidad();
                                listarEntidades();
                            }
                        }
                    });
                }

            });
        }

</script>
