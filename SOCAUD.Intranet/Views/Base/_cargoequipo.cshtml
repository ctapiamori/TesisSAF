@model SOCAUD.Intranet.Models.CargoEquipoServicioAuditoriaModel

<div class="modal-dialog modal-lg">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h4 class="modal-title">Registro de Cargos Requeridos en Auditoria</h4>
        </div>
        <div class="modal-body">
            <div class="row">
                <div class="col-md-12">
                    <form id="frmCargoEquipo">
                        @Html.HiddenFor(c => c.IdServicioAuditoria)
                            @Html.HiddenFor(c => c.IdCargoServicioAuditoria)
                            @Html.HiddenFor(c => c.IdExperienciaServicioAuditoria)
                            @Html.HiddenFor(c => c.IdCapacitacionServicioAuditoria)
                        <div class="form-group">
                            <div class="row">
                                <div class="col-md-6">
                                    @Html.LabelFor(c => c.IdCargoSeleted)
                                @Html.DropDownListFor(c => c.IdCargoSeleted, Model.CargosServicioAuditoria, "(Seleccionar Cargo)", new { @class = "form-control" })
                                @Html.ValidationMessageFor(c => c.IdCargoSeleted)
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                <div class="col-md-6">
                                    @Html.LabelFor(c => c.CantidadIntegrantes)
                                    @Html.TextBoxFor(c => c.CantidadIntegrantes, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(c => c.CantidadIntegrantes)
                                </div>
                                <div class="col-md-6">
                                    @Html.LabelFor(c => c.MinimoHoras)
                                    @Html.TextBoxFor(c => c.MinimoHoras, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(c => c.MinimoHoras)
                                </div>
                            </div>
                        </div>

                        
                        <div class="form-group">
                            <div class="row">
                                <div class="col-md-6">
                                        @Html.HiddenFor(c => c.IdCapacitacionServicioAuditoria)
                                        <label>Horas Minimas Capacitacion del Postulante</label>
                                        @Html.TextBoxFor(c => c.MinimoHorasCapacitacion, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(c => c.MinimoHorasCapacitacion)
                                </div>
                                <div class="col-md-6">
                                        @Html.HiddenFor(c => c.IdExperienciaServicioAuditoria)
                                        <label>Horas Minimas Experiencia del Postulante</label>
                                        @Html.TextBoxFor(c => c.MinimoHorasExperiencia, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(c => c.MinimoHorasExperiencia)
                                </div>
                            </div>

                        </div>
                       
                         <div class="modal-footer">
                            <button type="button" class="btn btn-primary" onclick="grabarCargoEquipo();"><i class="fa fa-fw fa-save"></i>Grabar</button>
                            <button type="button" class="btn btn-default" data-dismiss="modal" aria-hidden="true">Cerrar</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>




<script type="text/javascript">
   
    var _dataEntidades_ = null;
    var tabEntidades;

    $(document).ready(function () {

        $.validator.unobtrusive.parse($('#frmCargoEquipo'));
    });



    function limpiarFormularioRegistrarEquipoServicio() {
        $("#IdCargoSeleted").val(null);
        $("#CantidadIntegrantes").val("");
        $("#MinimoHoras").val("");
        $("#MinimoHorasCapacitacion").val("");
        $("#MinimoHorasExperiencia").val("");
    }

    function grabarCargoEquipo() {
        
        if (parseFloat($("#CantidadIntegrantes").val()) <= 0) {
            new PNotify({
                title: 'Respuesta Sistema!',
                type: "error",
                text: "Debe ingresar mínimo a un integrante"
            });
            return;
        }
        

        if (!$("#frmCargoEquipo").isValid()) { return; }

        bootbox.confirm(parametros.general.mensajeConfirmacion, function (result) {

            if (result) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GrabarCargoEquipo", "Base")',
                    data: $("#frmCargoEquipo").serialize(),
                    dataType: "json",
                    success: function (result) {
                        mostrarNotificacion(result);
                        limpiarFormularioRegistrarEquipoServicio();
                    }
                });
            }

        });
    }

</script>
