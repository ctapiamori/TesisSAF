@using System;
@using SOCAUD.Common.Enum;
@model SOCAUD.Intranet.Models.ServicioAuditoriaModel
@{
    ViewBag.PageTitle = "Servicio de Auditoria";
    ViewBag.PageDescription = "Servicio de Auditoria de la Base";
    //Layout = "~/Views/Shared/_Layout.cshtml";
}

<form id="frmGrabarServicioAuditoria">
    <div class="box box-primary color-palette-box">
        <div class="box-header with-border">
            <h3 class="box-title">Servicio de Auditoria</h3>
        </div>
        <div class="box-body">
            <form id="frmBases">
            @Html.HiddenFor(c => c.IdServicioAuditoria)
            @Html.HiddenFor(c => c.IdCodigoBase)
            <div class="form-group">
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.LabelFor(c => c.NumeroBase)
                            @Html.TextBoxFor(c => c.NumeroBase, new { @class = "form-control", @readonly = "true" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(c => c.PeriodoBase)
                            @Html.TextBoxFor(c => c.PeriodoBase, new { @class = "form-control", @readonly = "true" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(c => c.EntidadBase)
                            @Html.TextBoxFor(c => c.EntidadBase, new { @class = "form-control", @readonly = "true" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(c => c.RetribucionBase)
                            @Html.TextBoxFor(c => c.RetribucionBase, new { @class = "form-control", @readonly = "true" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-6">
                           <label>Inicio (Sugerido por Cronograma)</label>
                            <div class="input-group date">
                                @Html.TextBoxFor(c => c.FechaInicioSegunCronograma, new { @class = "form-control", @readonly = "true" })
                                <span class="input-group-addon">
                                    <i class="fa fa-calendar bigger-110"></i>
                                </span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label>Fin (Sugerido por Cronograma)</label>
                            <div class="input-group date">
                                @Html.TextBoxFor(c => c.FechaFinSegunCronograma, new { @class = "form-control", @readonly = "true" })
                                <span class="input-group-addon">
                                    <i class="fa fa-calendar bigger-110"></i>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        @Html.LabelFor(c => c.FechaInicio)
                        <div class="input-group date">
                            @Html.TextBoxFor(c => c.FechaInicio, new { @class = "form-control" })
                            <span class="input-group-addon">
                                <i class="fa fa-calendar bigger-110"></i>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(c => c.FechaInicio)
                    </div>
                    <div class="col-md-6">
                        @Html.LabelFor(c => c.FechaTermino)
                        <div class="input-group date">
                            @Html.TextBoxFor(c => c.FechaTermino, new { @class = "form-control" })
                            <span class="input-group-addon">
                                <i class="fa fa-calendar bigger-110"></i>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(c => c.FechaTermino)
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(c => c.RetribucionServicio)
                            @Html.TextBoxFor(c => c.RetribucionServicio, new { @class = "form-control" })
                            @Html.ValidationMessageFor(c => c.RetribucionServicio)
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(c => c.ViaticosServicio)
                            @Html.TextBoxFor(c => c.ViaticosServicio, new { @class = "form-control" })
                            @Html.ValidationMessageFor(c => c.ViaticosServicio)
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(c => c.IgvServicio)
                            @Html.TextBoxFor(c => c.IgvServicio, new { @class = "form-control", @readonly="true" })
                            @Html.ValidationMessageFor(c => c.IgvServicio)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <button type="button" id="btnGrabar" class="btn btn-primary" onclick="grabarServicio();"><i class="fa fa-fw fa-save"></i>Grabar Información</button>
                            <button type="button" id="btnRegresar" onclick="regresar();" class="btn btn-default"><i class="fa fa-chevron-left"></i>&nbsp;Regresar</button>
                        </div>
                    </div>
                </div>
            </div>
            </form>
        </div>
    </div>
</form>
<div class="box box-primary color-palette-box">
    <div class="box-header with-border">
        <h3 class="box-title">Equipo Requerido</h3>
    </div>
    <div class="box-body">

        <div class="row">
            <div class="form-group">
                <div class="col-md-12">
                    <table id="tabEquipo" class="table table-striped table-bordered" cellpadding="0" cellspacing="0" border="0"></table>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                <div class="col-md-12">
                    <button type="button" id="btnEquipo"  class="btn btn-primary" onclick="agregarEquipo();"><i class="fa fa-fw fa-plus"></i>Agregar Equipo Auditor</button>
                    <button type="button" id="btnRegresar2" onclick="regresar();" class="btn btn-default"><i class="fa fa-chevron-left"></i>&nbsp;Regresar</button>
                </div>
            </div>
        </div>
        
    </div>
</div>

<div class="modal fade" id="modalWorkflow" tabindex="-1" role="dialog" aria-hidden="true"></div>

<div class="modal fade" id="modalEquipoServicio" tabindex="-1" role="dialog" aria-hidden="true"></div>

@section scripts {

    <script type="text/javascript" language="javascript">
        $(document).ready(function () {



            $("#RetribucionServicio").keyup(function () {
                var totalRetribucion = $("#RetribucionServicio").val();
                totalRetribucion = parseFloat(totalRetribucion);
                var igvTotal = totalRetribucion * 0.18
                $("#IgvServicio").val(igvTotal);
            });

            listarEquipoServicioAuditoria();
            $('#FechaInicio').datepicker({
                format: "dd/mm/yyyy",
                startDate: '@DateTime.Now.ToString("dd/MM/yyyy")'
            }).next().on(ace.click_event, function () {
                $(this).prev().focus();
            });

            $('#FechaTermino').datepicker({
                format: "dd/mm/yyyy",
                startDate: '@DateTime.Now.ToString("dd/MM/yyyy")'
            }).next().on(ace.click_event, function () {
                $(this).prev().focus();
            });


        });


        var _cargosAuditoria_ = null;
        var tabEquipo = $("#tabEquipo").dataTable({
            "info": false,
            "bServerSide": false,
            "data": _cargosAuditoria_,
            "order": [[1, "asc"]],
            "columns": [
                { "sTitle": "Codigo", "visible" : false },
                { "sTitle": "Cargo" },
                { "sTitle": "Minimo Integrantes" },
                { "sTitle": "Minimo Participación(H)" },
                { "sTitle": "Minimo Capacitación (H)" },
                { "sTitle": "Minimo Capacitación (H)" },
                {
                    "bSortable": false,
                    "sClass": "center",
                    "render": function (data, type, row) {
                        return '<center><button class="btn btn-danger" title="Eliminar" type="button" onclick="EliminarCargoEquipo(' + row[0] + ');"><i class="fa fa-trash-o"></i></button></center>';
                    }
                }
            ]
        });


        function EliminarCargoEquipo(id) {


            bootbox.confirm(parametros.general.mensajeConfirmacion, function (result) {

                if (result) {
                    $.ajax({
                        url: '@Url.Action("EliminarCargoEquipo", "Base")',
                        type: 'POST',
                        async: false,
                        data: { id: id },
                        success: function (result) {
                            listarEquipoServicioAuditoria();
                        }
                    });

                }
            });


        }
            
        function listarEquipoServicioAuditoria() {
            $.ajax({
                url: '@Url.Action("ListarEquipoRequerido", "Base")',
                type: 'POST',
                async: false,
                data: { idServicio: $("#IdServicioAuditoria").val() },
                success: function (result) {
                    _cargosAuditoria_ = result;
                    tabEquipo.fnReloadData(_cargosAuditoria_);
                }
            });
        }


        $('#modalEquipoServicio').on('hidden.bs.modal', function () {
            listarEquipoServicioAuditoria();
        })

        function regresar() {
            document.location.href = '@Url.Action("Editar","Base", new { id = "_id_" })'.replace("_id_", $("#IdCodigoBase").val());
        }

        function agregarEquipo() {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("ViewCargoEquipo", "Base")',
                data: { IdServicio: $("#IdServicioAuditoria").val() },
                success: function (result) {
                    $("#modalEquipoServicio").empty().html(result).modal();
                }
            });
        }

        function grabarServicio() {
            

            if (parseFloat($("#RetribucionServicio").val()) <= 0) {
                new PNotify({
                    title: 'Respuesta Sistema!',
                    type: "error",
                    text: "La retribución debe ser mayor a 0 (cero)"
                });
                return;
            }

            if (parseFloat($("#ViaticosServicio").val()) < 0) {
                new PNotify({
                    title: 'Respuesta Sistema!',
                    type: "error",
                    text: "El viatico debe ser mayor o igual a 0 (cero)"
                });
                return;
            }

            if (!$("#frmGrabarServicioAuditoria").isValid()) { return; }

            bootbox.confirm(parametros.general.mensajeConfirmacion, function (result) {
                if (result) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GrabarServicioAuditoria", "Base")',
                        data: $("#frmGrabarServicioAuditoria").serialize(),
                        dataType: "json",
                        success: function (result) {
                            mostrarNotificacion(result);
                            if (result.Exito) {
                                $("#IdServicioAuditoria").val(result.Data)
                                //$("#btnGrabar").prop("disabled", true);
                            }
                        }
                    });
                }
            });
        }

    </script>

}